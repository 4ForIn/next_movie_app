// Mocks generated by Mockito 5.0.10 from annotations
// in next_movie_app/test/blocs/movie_bloc/movie_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:next_movie_app/data/models/movie/movie.dart' as _i4;
import 'package:next_movie_app/data/repositories/app_repository/app_repository.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [AppMovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppMovieRepository extends _i1.Mock
    implements _i2.AppMovieRepository {
  MockAppMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Movie>> fetchMovies([String? title]) =>
      (super.noSuchMethod(Invocation.method(#fetchMovies, [title]),
              returnValue: Future<List<_i4.Movie>>.value(<_i4.Movie>[]))
          as _i3.Future<List<_i4.Movie>>);
}

/// A class which mocks [AppMovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppMovieRepositoryRelaxed extends _i1.Mock
    implements _i2.AppMovieRepository {
  @override
  _i3.Future<List<_i4.Movie>> fetchMovies([String? title]) =>
      (super.noSuchMethod(Invocation.method(#fetchMovies, [title]),
              returnValue: Future<List<_i4.Movie>>.value(<_i4.Movie>[]))
          as _i3.Future<List<_i4.Movie>>);
}
