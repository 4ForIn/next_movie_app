// Mocks generated by Mockito 5.0.14 from annotations
// in next_movie_app/test/blocs/movie_bloc/movie_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:next_movie_app/blocs/movie_bloc/movie_bloc.dart' as _i4;
import 'package:next_movie_app/domain/repositories/movie_repository_interface/movie_repository_interface.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [MovieRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepositoryInterface<T> extends _i1.Mock
    implements _i2.MovieRepositoryInterface<T> {
  MockMovieRepositoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<T>> fetchMovies([String? title]) =>
      (super.noSuchMethod(Invocation.method(#fetchMovies, [title]),
          returnValue: Future<List<T>>.value(<T>[])) as _i3.Future<List<T>>);
  @override
  _i3.Future<void> addToFavorite(T? object) =>
      (super.noSuchMethod(Invocation.method(#addToFavorite, [object]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> removeFromFavorite(T? object) =>
      (super.noSuchMethod(Invocation.method(#removeFromFavorite, [object]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MovieRepositoryInterfaceRelaxed extends _i1.Mock
    implements _i2.MovieRepositoryInterface<List<_i4.MovieState>> {
  @override
  _i3.Future<List<List<_i4.MovieState>>> fetchMovies([String? title]) =>
      (super.noSuchMethod(Invocation.method(#fetchMovies, [title]),
              returnValue: Future<List<List<_i4.MovieState>>>.value(
                  <List<_i4.MovieState>>[]))
          as _i3.Future<List<List<_i4.MovieState>>>);
  @override
  _i3.Future<void> addToFavorite(List<_i4.MovieState>? object) =>
      (super.noSuchMethod(Invocation.method(#addToFavorite, [object]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> removeFromFavorite(List<_i4.MovieState>? object) =>
      (super.noSuchMethod(Invocation.method(#removeFromFavorite, [object]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}
